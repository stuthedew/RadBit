// Generated by CoffeeScript 1.7.1
var CRC, hex,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

CRC = require('./crc');

hex = require('./hex');

module.exports.CRC1 = (function(_super) {
  __extends(_Class, _super);

  function _Class() {
    return _Class.__super__.constructor.apply(this, arguments);
  }

  _Class.prototype.TABLE = [];

  _Class.prototype.CRC_MASK = 0x00;

  _Class.prototype.pack = function(crc) {
    return hex(crc % 256);
  };

  _Class.prototype.update = function(data) {
    var accum;
    accum = 0;
    this.each_byte(data, function(b) {
      return accum += b;
    });
    this.crc += accum % 256;
    return this;
  };

  return _Class;

})(CRC);
